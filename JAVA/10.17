데이터타입 9개 - 불차바쇼인롱플더 + 스
레퍼런스 4개 - 클인배열

*배열 - 연속적인 메모리 공간에 같은 타입의 데이터 저장 -> 첫번째 메모리만 알면 나머지 데이터에 접근가능
int [] intArray;   배열 선언 기본***
int [5] intArray;   ***오류*** -> C언어 스타일 불가능 
데이터를 직접 저장X -> 다른곳에 저장돼있는 데이터의 주소를 참조(레퍼런스) -> 배열은 주소값을 저장 

네모안에 점 -> 레퍼런스 변수

-배열 선언과 생성
1) 배열 선언
int [] intArray;

2) 배열 생성
intArray = new int [5];

-레퍼런스 치환
int [] intArray = new int[5];
int [] myArray[] = intArray;
여러개의 레퍼런스 변수로 같은곳을 참조

-배열의 크기 length
int size = intArray.length;           // . -> 참조연산자
for(int i=0; i<maxArr.length; i++)    // 배열의 크기까지 반복

-for each문
int [] n = {1,2,3,4,5};
int sum = 0;
for(int k : n){                       // 반복될 때마다 k는 n[0] ~ n[4]로 설정
  sum += k;
}

-2차원 배열
int [][] intArray = new int[2][5];
  i.length = 2     ( i[0], i[1] )
  i[0].length = 5  ( i[0][0] ... i[0][4] )
  i[1].length = 5  ( i[1][0] ... i[1][4] )

-메소드의 배열 리턴
int [] makeArray() {                  // return타입 = int[]
  int [] temp = new int[4];
  return temp;
}

-static
static main은 static밖에 호출하지못함

-예외처리(Exception)
try{
  예외가 발생할 수 있는 실행문
}
catch(처리할 예외타입 선언){
  예외처리문
}
finally{
  예외발생여부와 상관없이 실행되는 문
}

가장많이 볼 예외처리문
NullPointerException
InputMismatchException

------1교시 배열기본 실습------
import java.util.Scanner;
public class ArrayAccess {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		System.out.println("정수를 입력하세요");
		int [] maxArr = new int[10];
		int max = -210000000;
		for(int i=0; i<maxArr.length; i++) {
			maxArr[i] = sc.nextInt();
			if(maxArr[i] > max) {
				max = maxArr[i];
			}
		}
		System.out.print("입력한 정수 : ");
		for(int i=0; i<maxArr.length; i++) {
			System.out.print(maxArr[i]+" ");
		}		
		System.out.println("\nmax값: "+max);
		sc.close();
	}
}

-----2교시 메소드 배열리턴-----
public class ReturnArray {
	static int[] mkArr() {
		int[] temp = new int[4];
		for(int i=0; i<temp.length; i++) {temp[i] = i;}
		return temp;
	}
	public static void main(String[] args) {
		int[] intArr;
		intArr = mkArr();
		intArr[2] = 1000;
		for(int i=0; i<intArr.length; i++)
			System.out.print(intArr[i] + "  ");
	}
}

*메소드가 끝나면 temp 의 참조는 사라지는가?
new 연산자 사용 -> 없어지는메모리가아니라 heap 영역을 사용 -> 메소드의 temp는 없어지지만 heap이라는 다른 영역에 저장

-----3교시 문제풀이,예외처리-----
*
char [] c = new char[10]; 
int [] n = {0,1,2,3,4,5};
char [] day = {'일','월','화','수','목','금','토'};
double[][] d = new double[5][4];
int[][] val = {{1,2,3,4},{5,6,7,8},{9,10,11,12}};
char[4],return c
double [] a = allocArray();

// 예외처리 실습
import java.util.Scanner;
import java.util.InputMismatchException;
public class Exception {
	public static void main(String[] args) {
		Scanner sc= new Scanner(System.in);
		int dividend;
		int divisor;
		
		try {
			System.out.print("나누어지는 수: ");
			dividend = sc.nextInt();
			System.out.print("나누는 수: ");
			divisor = sc.nextInt();		
			System.out.println(dividend + " / " + divisor + " = " + dividend/divisor);
		}
		catch(ArithmeticException e){
			System.out.println("***0으로 나눌 수 없습니다!!!***");
		}
		catch(InputMismatchException m) {
			System.out.println("***문자를 나눌 수 없습니다!!!***");
		}
		finally {
			System.out.println("계산 끝");			
		}
		sc.close();
	}
}


////
이클립스 글자 깨질때
Run -> Debug configurations -> common -> Encoding -> other -> ms949
////
